---

- name: check if Nginx PGP key file exists
  stat:
    path: /usr/local/src/nginx.asc
  register: sansible_nginx_pgp_key_file

- name: Download Nginx PGP key (works with Bionic behind a proxy)
  become: yes
  get_url:
    dest: /usr/local/src/nginx.asc
    mode: 0644
    url: "{{ sansible_nginx_repo_keyserver }}/pks/lookup?op=get&search=0x{{ sansible_nginx_repo_key_id }}"
  when: not sansible_nginx_pgp_key_file.stat.exists

- name: Ensures Nginx PGP key is known
  become: yes
  apt_key:
    file: /usr/local/src/nginx.asc
    id: "{{ sansible_nginx_repo_key_id }}"
    state: present

- name: Add Nginx APT repository
  become: yes
  apt_repository:
    repo: "{{ sansible_nginx_repo }}"
    update_cache: yes

- name: Ensure latest nginx and supporting packages are installed
  become: yes
  apt:
    pkg:
      - "{{ 'nginx=' + sansible_nginx_version if sansible_nginx_version else 'nginx' }}"
      - "{{ 'nginx-extras=' + sansible_nginx_version if sansible_nginx_version else 'nginx-extras' }}"
    state: present

- name: Ensure includes and systemd override folders exist
  become: yes
  file:
    name: "{{ item }}"
    owner: root
    group: root
    state: directory
    mode: 0644
  loop:
    - /etc/nginx/includes
    - /etc/systemd/system/nginx.service.d

- name: Check for existence of logrotate config
  become: yes
  stat:
    path: /etc/logrotate.d/nginx
  register: sansible_nginx_logrotate_check

- name: Fix logrotate config if required
  become: yes
  lineinfile:
    backrefs: yes
    dest: /etc/logrotate.d/nginx
    line: '		service nginx reload >/dev/null 2>&1' # noqa 203
    regexp: 'invoke-rc.d nginx rotate >\/dev\/null 2>&1'
  when: sansible_nginx_logrotate_check.stat.exists
